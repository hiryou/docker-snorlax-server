version: "3.2"

services:
  namenode:
    build: ./namenode
    image: bde2020/hadoop-namenode:master
    container_name: namenode
    #hostname: namenode.snorlax.local
    ports:
      - 9870:9870
      - 9000:9000
    volumes:
      - type: volume
        source: /home/hadoop/docker/volumes/hadoop_namenode
        target: /hadoop/dfs/name
      - type: bind
        source: /home/hadoop/docker/volumes/host_shared
        target: /host_shared
        read_only: true
    environment:
      - CLUSTER_NAME=test
    env_file:
      - ./hadoop.env

  datanode1:
    build: ./datanode
    image: bde2020/hadoop-datanode:master
    container_name: datanode1
    ports:
      - 9864:9864
    depends_on:
      - namenode
    volumes:
      - /home/hadoop/docker/volumes/hadoop_datanode1:/hadoop/dfs/data
    environment:
      SERVICE_PRECONDITION: "namenode:9870"
    env_file:
      - ./hadoop.env

  datanode2:
    build: ./datanode
    image: bde2020/hadoop-datanode:master
    container_name: datanode2
    ports:
      - 9865:9864
    depends_on:
      - namenode
    volumes:
      - /home/hadoop/docker/volumes/hadoop_datanode2:/hadoop/dfs/data
    environment:
      SERVICE_PRECONDITION: "namenode:9870"
    env_file:
      - ./hadoop.env

  #resourcemanager:
  #  build: ./resourcemanager
  #  image: bde2020/hadoop-resourcemanager:master
  #  container_name: resourcemanager
  #  depends_on:
  #    - namenode
  #    - datanode1
  #    - datanode2
  #  environment:
  #    SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode1:9864 datanode2:9864"
  #  env_file:
  #    - ./hadoop.env
  #  ports:
  #    - "8088:8088"

  resourcemanager:
    build: ./spark-on-yarn
    image: bde2020/spark-on-yarn:master
    container_name: resourcemanager
    depends_on:
      - namenode
      - datanode1
      - datanode2
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode1:9864 datanode2:9864"
    env_file:
      - ./hadoop.env
    ports:
      - "8088:8088"

  historyserver:
    build: ./historyserver
    image: bde2020/hadoop-historyserver:master
    container_name: historyserver
    depends_on:
      - namenode
      - datanode1
      - datanode2
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode1:9864 datanode2:9864 resourcemanager:8088"
    volumes:
      - /home/hadoop/docker/volumes/hadoop_historyserver:/hadoop/yarn/timeline
    env_file:
      - ./hadoop.env
    ports:
      - "8188:8188"

  nodemanager1:
    build: ./nodemanager
    image: bde2020/hadoop-nodemanager:master
    container_name: nodemanager1
    depends_on:
      - namenode
      - datanode1
      - datanode2
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode1:9864 datanode2:9864 resourcemanager:8088"
    env_file:
      - ./hadoop.env
    ports:
      - "8042:8042"

  hive-server:
    image: bde2020/hive:2.3.2-postgresql-metastore
    container_name: hive-server
    env_file:
      - ./hadoop.env
      - ./hadoop-hive.env
    environment:
      HIVE_CORE_CONF_javax_jdo_option_ConnectionURL: "jdbc:postgresql://hive-metastore/metastore"
      SERVICE_PRECONDITION: "hive-metastore:9083"
    ports:
      - "10000:10000"
    volumes:
      - type: bind
        source: /home/hadoop/docker/volumes/host_shared
        target: /host_shared

  hive-metastore:
    image: bde2020/hive:2.3.2-postgresql-metastore
    container_name: hive-metastore
    env_file:
      - ./hadoop.env
      - ./hadoop-hive.env
    command: /opt/hive/bin/hive --service metastore
    environment:
      SERVICE_PRECONDITION: "hive-metastore-postgresql:5432"
    ports:
      - "9083:9083"

  hive-metastore-postgresql:
    image: bde2020/hive-metastore-postgresql:2.3.0
    container_name: hive-metastore-postgresql
    volumes:
      #- type: volume
      #  source: /home/hadoop/docker/volumes/hive-metastore-postgresql
      #  target: /var/lib/postgresql
      - type: bind
        source: /home/hadoop/docker/volumes/host_shared
        target: /host_shared

  presto-coordinator:
    image: shawnzhu/prestodb:0.181
    container_name: presto-coordinator
    ports:
      - "8080:8080"
